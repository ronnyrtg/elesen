@using AutoMapper;
@using TradingLicense.Infrastructure;
@using TradingLicense.Web.Classes;
@model TradingLicense.Model.AccessPageModel
@{
    ViewBag.Title = "ManageAccessPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    List<TradingLicense.Model.RoleTemplateModel> roleTemplateList = new List<TradingLicense.Model.RoleTemplateModel>();
    using (var ctx = new TradingLicense.Data.LicenseApplicationContext())
    {
        var roleTemplate = ctx.RoleTemplates.ToList();
        roleTemplateList = Mapper.Map<List<TradingLicense.Model.RoleTemplateModel>>(roleTemplate);
    }
}

<div id="divMessage"></div>
<div class="card">
    <div class="header">
        <h4 id="headerTitle">Manage Access Page</h4>
    </div>
    <div class="body">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frmAccessPage", id = "frmAccessPage" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.AccessPageID)

            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.PageDesc, new { @class = "control-label" }) <span class="cfont">*</span>
                        @Html.TextBoxFor(m => m.PageDesc, new { @class = "form-control", @maxlength = "100" })
                        @Html.ValidationMessageFor(m => m.PageDesc)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.RoleTemplateID, new { @class = "control-label" })<span class="cfont">*</span>
                        @Html.DropDownListFor(m => m.RoleTemplateID, new SelectList(roleTemplateList, "RoleTemplateID", "RoleTemplateDesc"), new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CrudLevel, new { @class = "control-label" }) <span class="cfont">*</span>
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "No Access",
                                Value = "0",
                                Selected = true
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "View Only",
                                Value = "1",
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "View & Create",
                                Value = "2",
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "View, Create & Edit",
                                Value = "3",
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "View, Create, Edit & Delete",
                                Value = "4",
                            });
                        }
                        @Html.DropDownListFor(m => m.CrudLevel, listItems, "-- Select Access Level --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CrudLevel)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @if (TradingLicenseCommon.HasAccess(SystemEnum.Page.AccessPages, SystemEnum.PageRight.CrudLevel2))
                        {
                            <input type="submit" class="btn btn-primary" value="Save" />
                        }
                        <input type="button" class="btn btn-default" value="Cancel" onclick="back()" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script>
         var actionError = '@(TempData["ErrorMessage"])';
           if (actionError != null && actionError != "") {
                errorMessage(actionError);
            }
    function back() {
         var link = '@Url.Action("AccessPage", "Master")';
        window.location.href = link;
    }
    </script>
}
