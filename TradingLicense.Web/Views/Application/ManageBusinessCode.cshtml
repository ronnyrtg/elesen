@model TradingLicense.Model.BusinessCodeModel
@{
    ViewBag.Title = "ManageBC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="divMessage"></div>
<div class="card">
    <div class="header">
        <h4 id="headerTitle">Kemaskini Kod Perniagaan Lesen Tred</h4>
    </div>
    <div class="body">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frmBC", id = "frmBC" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.BC_ID)
            @Html.HiddenFor(m => m.LIC_TYPEID)

            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Jenis Lesen<span class="cfont">*</span></div>
                        @if (Model.LIC_TYPEID > 0)
                        {
                            <div class="well well-sm">@Model.LicenseTypeDesc</div>
                        }
                        else
                        {
                            @Html.DropDownListFor(m => m.LIC_TYPEID, new SelectList(Model.licenseList, "LIC_TYPEID", "LIC_TYPEDESC"), "Select", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LIC_TYPEID)
                        }                       
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Kod Perniagaan<span class="cfont">*</span></div>
                        @Html.TextBoxFor(m => m.C_R, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.C_R)
                    </div>
                </div>
            </div>
            if (Model.SECTORID > 0 || Model.BC_ID == 0)
            {
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Kumpulan Kod<span class="cfont">*</span></div>
                        @Html.DropDownListFor(m => m.SECTORID, new SelectList(Model.sectorList, "SectorID", "SectorDesc"), "Select", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SECTORID)
                    </div>
                </div>
            </div>
            }

            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Aktiviti Perniagaan<span class="cfont">*</span></div>
                        @Html.TextAreaFor(m => m.C_R_DESC, new { @class = "form-control", @maxlength = "255" })
                        @Html.ValidationMessageFor(m => m.C_R_DESC)
                    </div>
                </div>
            </div>
            if (Model.DEF_RATE > 0 || Model.BC_ID == 0)
            {
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Fi Mengikut meter persegi<span class="cfont">*</span></div>
                        @Html.TextBoxFor(m => m.DEF_RATE, new { @class = "form-control allownumericwithdecimal" })
                        @Html.ValidationMessageFor(m => m.DEF_RATE)
                    </div>
                </div>
            </div>
            }
            if (Model.BASE_FEE > 0 || Model.BC_ID == 0)
            {
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Fi Mengikut Setiap Lesen<span class="cfont">*</span></div>
                        @Html.TextBoxFor(m => m.BASE_FEE, new { @class = "form-control allownumericwithdecimal" })
                        @Html.ValidationMessageFor(m => m.BASE_FEE)
                    </div>
                </div>
            </div>
            }
            if (Model.O_FEE > 0 || Model.BC_ID == 0)
            {
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Objek<span class="cfont">*</span></div>
                        @Html.TextAreaFor(m => m.O_NAME, new { @class = "form-control", @maxlength = "20" })
                        @Html.ValidationMessageFor(m => m.O_NAME)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Fi Mengikut Setiap Objek<span class="cfont">*</span></div>
                        @Html.TextBoxFor(m => m.O_FEE, new { @class = "form-control allownumericwithdecimal" })
                        @Html.ValidationMessageFor(m => m.O_FEE)
                    </div>
                </div>
            </div>
            }
            if (Model.LIC_TYPEID == 8 || Model.BC_ID == 0)
            {
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Waktu Operasi<span class="cfont">*</span></div>
                        @Html.TextBoxFor(m => m.DEF_HOUR, new { @class = "form-control", @maxlength = "20" })
                        @Html.ValidationMessageFor(m => m.DEF_HOUR)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Fi Mengikut Setiap Jam Melebihi Waktu Operasi<span class="cfont">*</span></div>
                        @Html.TextBoxFor(m => m.EX_HOUR_FEE, new { @class = "form-control allownumericwithdecimal" })
                        @Html.ValidationMessageFor(m => m.EX_HOUR_FEE)
                    </div>
                </div>
            </div>
            }
            if (Model.LIC_TYPEID == 5 || Model.BC_ID == 0)
            {
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Deposit bagi setiap banting<span class="cfont">*</span></div>
                        @Html.TextBoxFor(m => m.DEPOSIT, new { @class = "form-control allownumericwithdecimal" })
                        @Html.ValidationMessageFor(m => m.DEPOSIT)
                    </div>
                </div>
            </div>
            }
            <div class="row">
                <div class="col-sm-12 col-lg-6">
                    <div class="form-group">
                        <div class="control-label">Fi Lesen<span class="cfont">*</span></div>
                    </div>
                </div>
            </div>

            <div class="row">
                @if (Model.P_FEE > 0 || Model.BC_ID == 0)
                {
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.P_FEE, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.P_FEE)
                    </div>
                </div>
                }
                <div class="col-sm-1">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.PERIOD_Q, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PERIOD_Q)
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.DropDownListFor(model => model.PERIOD, new SelectList(Model.periodList, "id", "text"), new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(model => model.ACTIVE)
                                <span>Aktif</span><span class="pointer"><img src="~/images/checkmark.svg" alt="Checkmark" /></span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <div class="control-label">Unit Teknikal / Jabatan</div>
                        @Html.DropDownList("Departments", new SelectList(Model.selectedDepartments.OrderBy(x => x.text), "id", "text"), "Sila pilih Jabatan", new { @id = "departmentList", @class = "form-control", multiple = "true", onchange = "changeDepartments()" })
                        @Html.HiddenFor(model => model.DepartmentIDs)
                    </div>
                </div>
            </div>
            <div class="row" style="max-height:180px; overflow:auto;">
                <div class="col-sm-12">
                    <div class="form-group">
                        <div class="control-label">Dokumen Tambahan</div>
                        @foreach (var item in Model.additionalDocsList)
                        {
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox"
                                           name="AdditionalDocs"
                                           value="@item.RD_ID"
                                           @if (Model.AdditionalDocs?.Any(adID => adID == item.RD_ID) == true) { <text> checked</text> } />
                                    <span>@item.RD_DESC</span><span class="pointer"><img src="~/images/checkmark.svg" alt="Checkmark" /></span>
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        <input type="submit" class="btn btn-primary" value="Simpan" />
                        <input type="button" class="btn btn-default" value="Batal" onclick="back()" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script>

        $(function () {
            $("#Sectorlist").select2();

            function formatDepartments(data) {
                var r = data.text.split('~');
                var $result = $(
                    '<div class="row">' +
                        '<div class="col-md-2">' + r[0] + '</div>' +
                        '<div class="col-md-10">' + r[1] + '</div>' +
                    '</div>'
                );
                return $result;
            }

            function formatDepartmentSelection(data) {
                var r = data.text.split('~');
                var $result = $(
                    '<span>' +
                        r[0] + ' - ' + r[1] +
                    '</span>'
                );
                return $result;
            }

            $("#departmentList").select2({
                placeholder: "Sila pilih jabatan",
                minimumInputLength: 0,
                templateResult: formatDepartments,
                templateSelection: formatDepartmentSelection,
                ajax: {
                    type: "POST",
                    url: encodeURI('@Url.Action("FillDepartments", "Application")'),
                    //Data: allows us to pass a parameter to the controller
                    data: function (query) {
                        //console.log(query)
                        return {
                            query: query.term
                        }
                    },
                    //processes the results from the JSON method and gives us the select list
                    processResults: function (data) {
                        //console.log(data)
                        return {
                            results: data
                        };
                    }
                }
            });

            var departmentSelecteId = [];
            if ('@Model.DepartmentIDs' != null && '@Model.DepartmentIDs' != '') {
                var DepartmentIds = '@Model.DepartmentIDs';

                var arr = DepartmentIds.split(',');
                $.each(arr, function (index, value) {
                    departmentSelecteId.push(value);
                });
                $('#departmentList').val(departmentSelecteId);
                $('#departmentList').trigger('change');
            } else {
                businessSelecteId = [];
            }
        });

        var actionError = '@(TempData["ErrorMessage"])';
        if (actionError != null && actionError != "") {
            errorMessage(actionError);
        }
        function back() {
            var link = '@Url.Action("BusinessCode", "Application")';
            window.location.href = link;
        }

        function changeDepartments() {
            $('#DepartmentIDs').val($('#departmentList').val());
        }

        $(".allownumericwithdecimal").on("keypress keyup blur", function (event) {
            $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });

        $(".allownumeric").on("keypress keyup blur", function (event) {
            $(this).val($(this).val().replace(/[^0-9]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    </script>
}
